# -*- coding: utf-8 -*-
import sys
from mcp.server.fastmcp import FastMCP


mcp = FastMCP("AnalysisServer")

@mcp.tool()
def get_analysis_prompt() -> str:
    """
    获取：当用户要求生成分析报告时，推荐给模型遵循的工具调用流程提示词。
    """
    return (
        "当用户要求生成分析报告时，请遵循以下工具调用流程：\n"
        "\n"
        "1. **文件读取**：\n"
        "   - 使用已经实现的 `mcp.tool` 方法从指定路径读取文件。\n"
        "   - 确保文件格式正确并成功加载。\n"
        "   - 提示：如果文件格式错误或无法加载，请返回错误信息。\n"
        "\n"
        "2. **数据处理**：\n"
        "   - 检查数据是否需要清洗或处理（如缺失值填充、重复值删除、异常值检测等）。\n"
        "   - 如果需要处理数据，请调用相关 `mcp.tool` 方法完成。\n"
        "   - 中间处理结果存放在 `./temp` 文件夹中，建议以清晰的命名保存（如 `cleaned_data.csv`）。\n"
        "\n"
        "3. **描述性分析**：\n"
        "   - 对输入文件进行描述性分析，生成统计性文字输出。\n"
        "   - 包括数据的行列数、特征名、数据类型、缺失值统计等。\n"
        "   - 如果需要生成图表（如直方图、箱线图），请将图表保存到 `./temp` 文件夹，并记录文件路径。\n"
        "\n"
        "4. **统计分析**：\n"
        "   - 如果数据中包含数值列，进行统计分析。\n"
        "   - 包括：基本统计指标（均值、标准差、最大值、最小值等）、分类变量分布、相关性分析等。\n"
        "   - 生成统计结果（如表格）和可视化图表，保存到 `./temp` 文件夹。\n"
        "\n"
        "5. **总结**：\n"
        "   - 根据描述性分析和统计分析结果，生成文字总结。\n"
        "   - 提炼核心发现，如数据特征分布、主要关联性、分类变量的分布情况等。\n"
        "   - 确保总结内容语言简洁、重点突出。\n"
        "\n"
        "6. **报告生成**：\n"
        "   - 使用已经实现的 `mcp.tool` 方法，将上述分析内容生成报告，必须生成PDF格式的报告，除非用户指定格式。\n"
        "   - 注意，除非用户要求md格式，否则在任何文件里都不要输出md格式的文本，包括*、#、-等等md格式字符。\n"
        "   - 报告内容包括：\n"
        "     1. 简介。\n"
        "     2. 描述性分析结果。\n"
        "     3. 统计分析结果（如果有的话）。\n"
        "     4. 图表嵌入（如果有的话）。\n"
        "     5. 总结部分。\n"
        "   - 报告生成后，提示用户报告保存路径，如果没有指定则存在 `./outputs` 下。\n"
        "\n"
        "7. **清理临时文件**：\n"
        "   - 删除 `./temp` 文件夹及其中间结果文件，确保输出目录干净。\n"
        "\n"
        "提示：\n"
        "   - 任何步骤出错时，请及时返回错误信息，并指导用户如何修正问题。\n"
        "   - 调用工具时，请严格按照工具的说明文档或调用方法。\n"
    )


if __name__ == "__main__":
    mcp.run(transport='stdio')